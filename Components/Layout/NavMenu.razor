@using EduTrack.Services
@rendermode InteractiveServer
@inject Blazored.LocalStorage.ILocalStorageService LocalStorageService 
<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">KgtuTracker</a>
	</div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
	<nav class="flex-column">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Главная
			</NavLink>
		</div>
		@if (UserStateService.Role is RoleTypes.Teacher)
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="courses">
					<span class="bi bi-book-fill-nav-menu" aria-hidden="true"></span> Курсы
				</NavLink>
			</div>
		}
		
		@if (UserStateService.Role is RoleTypes.Student)
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="course">
					<span class="bi bi-book-fill-nav-menu" aria-hidden="true"></span> Курсы
				</NavLink>
			</div>
		}
		@if (UserStateService.Role is  RoleTypes.Teacher)
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="add-assignment">
					<span class="bi bi-file-earmark-text-fill-nav-menu" aria-hidden="true"></span> Задания
				</NavLink>
			</div>
		}
		

		@if (UserStateService.Role is  RoleTypes.Teacher)
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="teacher-submissions">
					<span class="bi bi-star-fill-nav-menu" aria-hidden="true"></span> Оценки
				</NavLink>
			</div>
		}

		@if (UserStateService.Role is RoleTypes.Student)
		{

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="sgrades">
					<span class="bi bi-person-check-fill-nav-menu" aria-hidden="true"></span> Оценки
				</NavLink>
			</div>

		}

		@if (UserStateService.IsAuthenticated)
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="user-profile">
					<span class="bi bi-person-circle-nav-menu" aria-hidden="true"></span> Профиль
				</NavLink>
			</div>
		}
		else
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="welcome">
					<span class="bi bi-person-circle-nav-menu" aria-hidden="true"></span> Профиль
				</NavLink>
			</div>
		}
	</nav>
</div>

@code {
	protected override void OnInitialized()
	{
		UserStateService.OnSignIn += f => Reload();
		UserStateService.OnSignOut += f => Reload();
	}

	private void Reload()
	{
		InvokeAsync(StateHasChanged);
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			UserStateService._localStorageService = LocalStorageService;
			await UserStateService.InitUserStateAsync();
			await InvokeAsync(StateHasChanged);
		}
	}
}